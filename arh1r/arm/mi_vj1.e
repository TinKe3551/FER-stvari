# DO NOT EDIT THIS FILE !!!!!!!!!!!!
#
# CONAS v3.0 output file
#
# Processor name: ARM 7
#
8 ; memory word width
#
32 ; address width
#
#
# Original file: Z:/home/tk/FER-stvari/arh1r/arm/mi_vj1.a
#
#
<1,0>	                      ;start
<2,0>	                      ;        
<3,0>	                      ;
<4,0>	                      ;
<5,0>	                      ;kraj
<6,0>	00000000  56 34 12 EF ;        swi     0x123456
<7,0>	                      ;
<8,0>	                      ;
<9,0>	                      ;
<10,0>	                      ;PODIJELI
<11,0>	00000004  0E 00 2D E9 ;        stmfd   sp!, {r1, r2, r3}       ; spremanje konteksta
<12,0>	                      ;
<13,0>	00000008  10 10 9D E5 ;        ldr     r1, [sp, #16]
<14,0>	0000000C  14 20 9D E5 ;        ldr     r2, [sp, #20]
<15,0>	00000010  01 30 A0 E3 ;        mov     r3, #1
<16,0>	                      ;
<17,0>	00000014  00 00 A0 E3 ;        mov     r0, #0
<18,0>	                      ;
<19,0>	00000018  00 00 52 E3 ;        cmp     r2, #0  ; ako je u r2 0, odmah se vraÄ‡a 0 preko r0
<20,0>	0000001C  15 00 00 0A ;        beq     kr_djel
<21,0>	                      ;
<22,0>	                      ;pr1
<23,0>	00000020  00 00 51 E3 ;        cmp     r1, #0  ; ako je prvi broj negativan, obrni njegov predznak i predznak rezultata
<24,0>	00000024  03 00 00 5A ;        bpl     pr2
<25,0>	00000028  01 10 E0 E1 ;        mvn     r1, r1
<26,0>	0000002C  01 10 81 E2 ;        add     r1, r1, #1
<27,0>	00000030  03 30 E0 E1 ;        mvn     r3, r3
<28,0>	00000034  01 30 83 E2 ;        add     r3, r3, #1
<29,0>	                      ;
<30,0>	                      ;pr2
<31,0>	00000038  00 00 52 E3 ;        cmp     r2, #0  ; isto tako i za drugi broj
<32,0>	0000003C  03 00 00 5A ;        bpl     pt_djel
<33,0>	00000040  02 20 E0 E1 ;        mvn     r2, r2
<34,0>	00000044  01 20 82 E2 ;        add     r2, r2, #1
<35,0>	00000048  03 30 E0 E1 ;        mvn     r3, r3
<36,0>	0000004C  01 30 83 E2 ;        add     r3, r3, #1
<37,0>	                      ;
<38,0>	                      ;pt_djel
<39,0>	00000050  02 10 41 E0 ;        sub     r1, r1, r2      ; od r1 se uzastopno oduzima r2, a r0 se pribraja 1
<40,0>	00000054  01 00 80 E2 ;        add     r0, r0, #1
<41,0>	00000058  00 00 51 E3 ;        cmp     r1, #0
<42,0>	0000005C  FB FF FF 5A ;        bpl     pt_djel         ; petlja se prekida kada je r1 <= 0
<43,0>	                      ;
<44,0>	00000060  00 00 51 E3 ;        cmp     r1, #0
<45,0>	00000064  01 10 81 42 ;        addmi   r1, r1, #1
<46,0>	                      ;
<47,0>	00000068  00 00 53 E3 ;        cmp     r3, #0  ; postavljanje predznaka rezultata
<48,0>	0000006C  01 00 00 5A ;        bpl     kr_djel
<49,0>	00000070  00 00 E0 E1 ;        mvn     r0, r0
<50,0>	00000074  01 00 80 E2 ;        add     r0, r0, #1
<51,0>	                      ;
<52,0>	                      ;kr_djel
<53,0>	00000078  0E 00 BD E8 ;        ldmfd   sp!, {r1, r2, r3}       ; obnova konteksta
<54,0>	0000007C  0E F0 A0 E1 ;        mov     pc, lr
#
# Debug Data
#
.debug:

#
#
# Assembling: OK