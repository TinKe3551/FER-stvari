
        org     0x200
rez     dw      0
zadnji  dw      0x8080


start
; r1, r2, r3 - pokazivači na memorijske adrese ulaznih podataka
; r4, r5, r6 - podaci
; r7 - broj 0x8080
        mov     r1, #0x300      ; inicijalizacija r1, r2, r3, i r7
        mov     r2, #0x500
        mov     r3, #0x700
        ldr     r7, 0x204

petlja
        ldrh    r4, [r1], #2    ; učitavanje podataka
        ldrh    r5, [r2], #2
        ldrh    r6, [r3], #2
        
        cmp     r4, r7          ; program se prekida kada je barem jedan od učitanih podataka jednak 0x8080
        beq     kraj

        stmfd   sp!, {r4, r5, r6}       ; spremanje argumenata i pozivanje potprograma srednja
        bl      srednja
        add     sp, sp, #12

        ldr     r0, rez         ; učitavanje rezultata sa fiksne lokacije

        add     r1, r1, #0x700  ;upisivanje rezultata u memoriju
        str     r0, [r1]
        sub     r1, r1, #0x700


kraj
        swi     0x123456



srednja
; r1, r2, r3 - podaci
        stmfd   sp!, {r1, r2, r3, lr}
        ldr     r1, [sp, #20]   ; učitavanje podataka u r1, r2 i r3
        ldr     r2, [sp, #24]
        ldr     r3, [sp, #28]

        stmfd   sp!, {r1}       ; na r1, r2 i r3 primjenjuje se bzp_2k
        bl      bzp_2k
        mov     r1, r0
        add     sp, sp, #4

        stmfd   sp!, {r2}
        bl      bzp_2k
        mov     r2, r0
        add     sp, sp, #4

        stmfd   sp!, {r3}
        bl      bzp_2k
        mov     r3, r0
        add     sp, sp, #4

; r1 - zbroj podataka
; r2 - predznak rezultata
; r3 - rezultat koji će se upisati u adresu rez

        add     r1, r1, r2
        add     r1, r1, r3

        mov     r2, #1
        mov     r3, #0

        cmp     r1, #0
        mvnmi   r1, r1
        addmi   r1, #1

dj
        
        
