; a1 - adresa podataka prvog vektora
; a2 - adresa podataka drugog vektora
; s0 - adresa u koju se upisuje rezultat
; a3 - konačan rezultat
; a4 - umnožak pojedinog para elemenata vektora
; t0 - brojač petlje

main
        lui     s0, %hi(0x1000)
        addi    s0, s0, %lo(0x1000)

        addi    a1, x0, 0x200
        addi    a2, x0, 0x300

        addi    a3, x0, 0
        lb      s1, 0x400(x0)

        lui     sp, %hi(0x10000)
        addi    sp, sp, %lo(0x10000)

        addi    t0, x0, 0

loop
        lw      a4, 0(a1)       ; stavljanje prvog faktora na stog
        addi    a1, a1, 4
        addi    sp, sp, -4
        sw      a4, 0(sp)

        lw      a4, 0(a2)       ; stavljanje drugog faktora na stog
        addi    a2, a2, 4
        addi    sp, sp, -4
        sw      a4, 0(sp)

        jal     ra, mul         ; poziv potprograma i brisanje stoga
        addi    sp, sp, 8

        add     a3, a3, a4      ; akumulacija rezultata u a4

        addi    t0, t0, 1       ; povećanje i provjera brojača petlje
        blt     t0, s1, loop

        sw      a3, 0(s0)       ; upis rezultata u memoriju
kraj
        halt


mul
        addi    sp, sp, -4      ; kontekst
        sw      a1, 0(sp)
        addi    sp, sp, -4
        sw      a2, 0(sp)
        addi    sp, sp, -4
        sw      ra, 0(sp)

        lw      a1, 12(sp)      ; faktori
        lw      a2, 16(sp)
        addi    a4, a4, 0       ; umnožak

        bge     a1, x0, loop2   ; ako je prvi faktor negativan, obrni predznak faktorima

        xori    a1, a1, 0xffffffff
        addi    a1, a1, 1
        xori    a2, a2, 0xffffffff
        addi    a2, a2, 1

loop2   addi    a1, a1, -1      ; u registar a4 se a1 puta pribroji a2
        blt     a1, x0, mul_e
        add     a4, a4, a2
        jal     x0, loop2

mul_e
        lw      ra, 0(sp)       ; kontekst i povratak iz potprograma
        addi    sp, sp, 4
        lw      a2, 0(sp)
        addi    sp, sp, 4
        lw      a1, 0(sp)
        addi    sp, sp, 4
        jalr    x0, 0(ra)

        



 org 0x200
vekt1 dw 1, -9, -17, 7, -1, 1, -1, 3, 1
 org 0x300
vekt2 dw 19, -3, -14, -2, 12, -13, 5, 0, -4
 org 0x400
 db 9



        org     0x1000
rez     dw      0